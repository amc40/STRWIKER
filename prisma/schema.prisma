generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model Player {
  id           Int           @id @default(autoincrement())
  name         String
  playerPoints PlayerPoint[]
  gameId       Int?

  @@index([gameId])
}

model Game {
  id             Int      @id @default(autoincrement())
  startTime      DateTime @default(now())
  currentPoint   Point?   @relation(name: "currentPoint", fields: [currentPointId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  currentPointId Int?     @unique
  completed      Boolean
  finalScoreRed  Int?
  finalScoreBlue Int?
  points         Point[]  @relation(name: "pointGame")

  @@index([startTime])
}

model Point {
  id               Int           @id @default(autoincrement())
  game             Game          @relation(name: "pointGame", fields: [gameId], references: [id])
  playerPoints     PlayerPoint[]
  currentRedScore  Int
  currentBlueScore Int
  startTime        DateTime      @default(now())
  endTime          DateTime?

  gameId             Int
  gameIfCurrentPoint Game? @relation("currentPoint")

  @@index([gameId])
  @@index([gameId, startTime])
}

enum Team {
  Red
  Blue
}

model PlayerPoint {
  id       Int    @id @default(autoincrement())
  player   Player @relation(fields: [playerId], references: [id])
  point    Point  @relation(fields: [pointId], references: [id])
  position Int
  // Red || Blue
  team     Team

  scoredGoal Boolean
  ownGoal    Boolean
  rattled    Boolean

  playerId Int
  pointId  Int

  @@index([playerId])
  @@index([pointId])
}
