generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL")
  directUrl = env("POSTGRES_URL_NON_POOLING")
}

model Player {
  id           Int           @id @default(autoincrement())
  name         String        @unique
  playerPoints PlayerPoint[]
  gameId       Int?
  // Stats !!!
  elo          Int           @default(1200)
  gamesPlayed  Int           @default(0)

  @@index([gameId])
}

model Game {
  id             Int            @id @default(autoincrement())
  startTime      DateTime       @default(now())
  currentPoint   Point?         @relation(name: "currentPoint", fields: [currentPointId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  currentPointId Int?           @unique
  completed      Boolean        @default(false)
  abandoned      Boolean        @default(false)
  finalScoreRed  Int?
  finalScoreBlue Int?
  points         Point[]        @relation(name: "pointGame")
  rotatyRed      RotatyStrategy
  rotatyBlue     RotatyStrategy

  @@index([startTime])
  @@index([completed, abandoned])
}

enum RotatyStrategy {
  Never
  OnConcede
  Always
}

model Point {
  id                 Int           @id @default(autoincrement())
  game               Game          @relation(name: "pointGame", fields: [gameId], references: [id])
  playerPoints       PlayerPoint[]
  currentRedScore    Int           @default(0)
  currentBlueScore   Int           @default(0)
  startTime          DateTime      @default(now())
  endTime            DateTime?
  gameId             Int
  gameIfCurrentPoint Game?         @relation("currentPoint")

  @@index([gameId])
  @@index([gameId, startTime])
}

enum Team {
  Red
  Blue
}

model PlayerPoint {
  id       Int    @id @default(autoincrement())
  player   Player @relation(fields: [playerId], references: [id])
  point    Point  @relation(fields: [pointId], references: [id])
  position Int // 0 is against the wall
  // Red || Blue
  team     Team

  scoredGoal Boolean
  ownGoal    Boolean
  rattled    Boolean

  playerId Int
  pointId  Int

  @@unique([playerId, pointId])
  @@index([playerId])
  @@index([pointId])
}
